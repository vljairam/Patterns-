Sum of digits at odd and even positions
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        int oddPositionSum = 0;
        int evenPositionSum = 0;
        int position = 1;
        
        while (number > 0) {
            int digit = number % 10; 
            if (position % 2 == 0) {
                evenPositionSum += digit;
            } else {
                oddPositionSum += digit;
            }
            number /= 10; 
            position++;
        }
        
        System.out.println("Sum of digits at odd positions: " + oddPositionSum);
        System.out.println("Sum of digits at even positions: " + evenPositionSum);
        
        scanner.close();
    }
}


Remove the duplicate values
i/p:5
    1 2 1 3 2
o/p: 1 2 3

import java.util.*;
public class Main
{
   public static void main(String args[])
   {
       Scanner s=new Scanner(System.in);
       int n=s.nextInt();
       int a[]=new int[n];
       
       for(int i=0;i<n;i++)
       {
           a[i]=s.nextInt();
       }
       for(int i=0;i<n;i++)
       {
           for(int j=i+1;j<n;j++)
           {
               if(a[i]==a[j])
               {
                   for(int k=j;k<n-1;k++)
                    a[k]=a[k+1];
                   j--;
                   n--;
               }
               
           }
       }
       for(int i=0;i<n;i++)
       System.out.println(a[i]);
       
   }
}

//Write a program  to insert the value at given position in the array.

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	       int n=s.nextInt();
	       int a[]=new int[n];
	       for(int i=0;i<n;i++)
	       {
	           a[i]=s.nextInt();
	       }
	       int pos=s.nextInt();
	       int e=s.nextInt();
	       int arr[]=new int[n+1];
	       for(int i=0;i<pos-1;i++)
	       {
	           arr[i]=a[i];
	       }
	       arr[pos-1]=e;
	       for(int i=pos-1;i<n;i++)
	       {
	           arr[i+1]=a[i];
	       }
	       for(int i=0;i<n+1;i++)
	       {
	           System.out.print(arr[i]+" ");
	       }
	 }
}

pattern
ip:4
o/p:1
    **
    333
    ****
 
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    for(int i=1;i<=n;i++)
	    {
	        for(int j=1;j<=i;j++)
	        {
	            if(i%2==0)
	            {
	                System.out.print("*");
	            }
	            else{
	                System.out.print(i);
	            }
	        }
	        System.out.println();
	    }
	}
}

Largest number
ip:586
o/p:8


import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int temp=n;
	    int max=0;
	       while(temp>0)
	       {
	           n=temp%10;
	           if(max<n)
	           {
	               max=n;
	           }
	           temp=temp/10;
	       }
	       System.out.print(max);
	    }
	}


2digits array values swap
i/p:3
    12 34 56
o/p:21 43 65

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int a[]=new int[n];
	    for(int i=0;i<n;i++)
	    {
	        a[i]=s.nextInt();
	    }
	    for(int i=0;i<n;i++)
	    {
	        int ar=a[i]%10;
	        int b=a[i]/10;
	        int temp=ar;
	        ar=b;
	        b=temp;
	        System.out.print(b);
	        System.out.print(ar+" ");
	        
	    }
	    }
	}


i/p:a*b=9375
    a/b=15
    a+b=?


import java.util.*;
public class Main
{
  public static void main (String[]args)
  {
	Scanner s = new Scanner (System.in);
	int mul = 9375;
	int div = 15;
	int bsq = mul / div;
	int b = (int) Math.sqrt (bsq);
	int a = div * b;
	  System.out.println(a);
	 System.out.println(b);
	  System.out.print(a+b);
}
}


pattern
i/p:4
o/p:1
    3 2
    6 5 4
    10 9 8 7 


import java.util.*;
public class Main
{
  public static void main (String[]args)
  {
	Scanner s = new Scanner (System.in);
	int n=s.nextInt();
	int k=0,l=0;
	for(int i=1;i<=n;i++)
	{
	    l=k+i;
	    k=l;
	    for(int j=1;j<=i;j++)
	    {
	        System.out.print(l);
	        l--;
	    }
	    System.out.println();
	}
  }
}


Diomand pattern

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n=s.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=n-i;j++)
            {
                System.out.print(" ");
            }
            
            for(int k=1;k<=2*i-1;k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
        for(int i=n-1;i>0;i--)
        {
            for(int j=1;j<=n-i;j++)
            {
                System.out.print(" ");
            }
            
            for(int k=1;k<=2*i-1;k++)
            {
                System.out.print("*");
            }
            System.out.println();
        }
        
    }
        
}

ip:5
op:    1
      2 2
     3 3 3 
    4 4 4 4
   5 5 5 5 5

import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n=s.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=n-i;j++)
            {
                System.out.print(" ");
            }
            
            for(int k=1;k<=i;k++)
            {
                System.out.print(i+" ");
            }
            System.out.println();
        }
        
        }
        
    }


condition to make a triangle

i/p:2 0 1
o/p:No

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int a=s.nextInt();
	    int b=s.nextInt();
	    int c=s.nextInt();
	    if(a==0 || b==0 || c==0)
	    {
	        System.out.print("No");
	    }
	    
	    else if(a+b>c || a+c>b || c+b>a)
	    {
	        System.out.print("Yes");
	    }
	   

	}
}

pattern:
i/p:3
o/p:    0
      1 0 1
    2 1 0 1 2
    

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    for(int i=0;i<n;i++)
	    {
	        for(int j=n-i;j>1;j--)
	        {
	            System.out.print("  ");
	        }
	        for(int k=i;k>=0;k--)
	        {
	            System.out.print(k+" ");
	        }
	        for(int k=1;k<=i;k++)
	        {
	            System.out.print(k+" ");
	        }
	        System.out.println();
	    }
	}
}

ip:5
   1 2 3 2 1
op:1 2

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int a[]=new int[n];
	    for(int i=0;i<n;i++)
	    {
	        a[i]=s.nextInt();
	    }
	    Arrays.sort(a);
	    for(int i=0;i<n;i++)
	    {
	        int c=0;
	        for(int j=i+1;j<n;j++)
	        {
	            if(a[i]==a[j])
	           {
	               c++;
	           }
	        }
	        if(c>0)
	        {
	            System.out.print(a[i]+" ");
	        }
	    }
	}
}


Smallest even duplicate

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int a[]=new int[n];
	    for(int i=0;i<n;i++)
	    {
	        a[i]=s.nextInt();
	    }
	   int min=0;
	    for(int i=0;i<n;i++)
	    { 
	        int c=0;
	        for(int j=i+1;j<n;j++)
	        {
	               if(a[i]%2==0)
	               {
	                   if(a[i]==a[j])
	                    c++;
	               }
	                min=a[i];;
	               if(min>a[i])
	               {
	                   min=a[i];
	               }
	           }
	        }
        }
        System.out.print(min);
	}
}


if 2 power value is

ip:8
o/p:True

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    int c=0;
	    for(int i=0;i<=n;i++)
	    {
	       double p=Math.pow(2,i);
	       if(p==n)
	       {
	           c++;
	           System.out.print("True");
	           break;
	       }
        }
        if(c==0)
        {
            System.out.print("False");
        }
        
	}
}


print number till 0 if x is -ve else print till x from 0 x is +ve
i/p:-5
o/p:-5 -4 -3 -2 -1 0

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int n=s.nextInt();
	    if(n>0){
	          for(int i=0;i<=n;i++)
	          {
	            System.out.print(i+" ");
	         }
	    }
	    else if(n<0)
	    {
	        for(int i=n;i<=0;i++)
	        {
	            System.out.print(i+" ");
	        }
	    }
}
}

Gcd of two numbers
ip:12 30
op:6

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner s=new Scanner(System.in);
	    int a=s.nextInt();
	    int b=s.nextInt();
	    int min=0;
	    int n=0;
	    if(a>b)
	    {
	        min=b;
	    }
	    else 
	    {
	        min=a;
	    }
	    for(int i=1;i<=min;i++)
	    {
	        if(a%i==0 && b%i==0)
	        {
	            n=i;
	        }
	    }
	    System.out.print(n);
	}
}
https://github.com/Kanishkar8844/Java.git



interface area oof circle,rectangle,triangle
import java.util.*;

interface Circle {
    void areaofc();
}

interface Rectangle {
    void areaofr();
}

interface Triangle {
    void areaoft();
}

public class Area implements Circle, Rectangle, Triangle {
    double c;  
    int c1;    
    double c2; 

    @Override
    public void areaofc() {
        int r = 5; 
    }

    @Override
    public void areaofr() {
        int l = 10; 
        int w = 5;  
        c1 = l * w;
    }

    @Override
    public void areaoft() {
        int b = 8;  
        int h = 4;  
        c2 = 0.5 * b * h;
    }

    public void display() {
        System.out.println("Area of circle: " + c);
        System.out.println("Area of rectangle: " + c1);
        System.out.println("Area of triangle: " + c2);
    }

    public static void main(String[] args) {
        Area a = new Area();
        a.areaofc();
        a.areaofr();
        a.areaoft();
        a.display();
    }
}

using interface change hight,width
import java.util.*;

interface resizable {
    void resizeWith();
    void resizeheight();
}

class rectangle implements resizable {
     int h;
     int w;
   
    public void resizeWith() {
         w=12;
    }
    
    public void resizeheight() {
        h=13;
    }
   

    public static void main(String args[]) {
       int e=100;
        rectangle r = new rectangle();
        
        r.h=e;
        r.w=e;
        System.out.println(r.h+" "+r.w); 
    }
}



import java.util.*;
interface resizable
{
    void resizewidth(int w);
    void resizeheight(int h);
}
public class Rectangle implements resizable
{
    int h;
    int w;
    public  Rectangle(int h,int w){
        this.h=h;
        this.w=w;
    }
    public void resizewidth(int w)
    {
       // this.h=h;
        this.w=w;
    }
    public void resizeheight(int h)
    {
        this.h=h;
    }
    public void display()
    {
        System.out.print("Width"+w+"Height"+h);
    }
    
	public static void main(String[] args) {
	    Rectangle r=new Rectangle(10,20);
	    r.display();
	}
}

GitHub
Develop a code to print the following pattern
 A
 BB
 CCC
 DDDD
 EEEEE

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	Scanner s=new Scanner(System.in);
	int n=s.nextInt();
	for(int i=0;i<n;i++)
	{
	    for(int j=0;j<=i;j++)
	    {
	        char a=(char)(65+i);
	        System.out.print(a);
	}
	  System.out.println();
	}
}
}

Second word reverse program:
ip:HelloWorld
op:HellodlroW

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	Scanner s=new Scanner(System.in);
	String s1=s.nextLine();
	String s2=s.nextLine();
	StringBuffer b=new StringBuffer(s2);
	String s3=b.reverse().toString();
	System.out.print(s1+s3);
}
}


ip:Hello
   World
op:He
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	Scanner s=new Scanner(System.in);
	String s1=s.nextLine();
	String s2=s.nextLine();
	String s3="";
    for(int i=0;i<s1.length();i++)
    {
        int c=0;
        for(int j=0;j<s2.length();j++)
        {
            if(s1.charAt(i)==s2.charAt(j))
            {
                c++;
            }
        }
        if(c<1)
        {
            System.out.print(s1.charAt(i));
        }
        
    }
}
}


ip:java
op:jaav

import java.util.*;
public class Main
{
	public static void main(String[] args) {
	Scanner s=new Scanner(System.in);
	String s1=s.nextLine();
	String s2="";
	String s3="";
    int n=s1.length()/2;
    for(int i=0;i<n;i++)
    {
        s2=s2+s1.charAt(i);
    }
    for(int i=s1.length()-1;i>=n;i--)
    {
        s3=s3+s1.charAt(i);
    }
    String s4=s2+s3;
    System.out.print(s4);
}
}

Abstract class

import java.util.*;
abstract class A
{
    public abstract void print();
    public void display()
    {
        System.out.println("zzz");
    }
}
class B extends A
{
    public void print()
    {
        System.out.println("abc");
    }
}
class Main
{
    public static void main (String[] args) {
    B b=new B();
    b.display();
    b.print();
}
}


Interface:

import java.util.*;
interface vehicle
{
    void gear(int g);
    void speed(int s);
}
class B implements vehicle
{
    int gr;
    int sp;
    public void gear(int g)
    {
        gr=g;
    }
    public void speed(int s)
    {
        sp=s;
    }
    public void print()
    {
        System.out.print(gr+" "+sp);
    }
}
class Main
{
    public static void main (String[] args) {
    B b=new B();
    b.gear(5);
    b.speed(6);
    b.print();
}
}


import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = scanner.nextInt();
        
        int oddPositionSum = 0;
        int evenPositionSum = 0;
        int position = 1;
        
        while (number > 0) {
            int digit = number % 10; 
            if (position % 2 == 0) {
                evenPositionSum += digit;
            } else {
                oddPositionSum += digit;
            }
            number /= 10; 
            position++;
        }
        
        System.out.println("Sum of digits at odd positions: " + oddPositionSum);
        System.out.println("Sum of digits at even positions: " + evenPositionSum);
        
        scanner.close();
    }
}


ip:4
op:1
   2 1 2
   3 2 1 2 3
   4 3 2 1 2 3 4

import java.util.*;
public class Main
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=i;j>=1;j--)
            {
                System.out.print(j+" ");
            }
            for(int k=2;k<=i;k++)
            {
                System.out.print(k+" ");
            }
            System.out.println();
        }
    }
}


Removing the character to make palindrome:

import java.util.*;

public class Palindrome {
    public static void main(String args[]) {
        Scanner scanner = new Scanner(System.in);
        String s1 = scanner.nextLine();
        scanner.close();
        
        boolean found = false;

        for (int i = 0; i < s1.length(); i++) {
            String s2 = s1.substring(i, i + 1);
            String s3 = s1.substring(0, i);
            String s4 = s1.substring(i + 1); 
            String s5 = s3 + s4;

            StringBuffer sb = new StringBuffer(s5);
            if (sb.reverse().toString().equals(s5)) {
                System.out.println(s2);
                found = true;
            }
        }

        if (!found) {
            System.out.println("No palindrome found after removing one character.");
        }
    }
}


Count the no of occurrence of a letters:
ip:malayalam
op:m 2 a 4 1 2 y 1

import java.util.*;
public class Main
{
    public static void main(String[] args) {
       Scanner s=new Scanner(System.in);
       String s1=s.nextLine();
       int n=s1.length();
       String s2="";
       for(int i=0;i<n;i++)
       {
           int c=0;
            if(!s2.contains(String.valueOf(s1.charAt(i))))
             {
           for(int j=0;j<n;j++)
           {
               if(s1.charAt(i)==s1.charAt(j))
               {
                   c++;
               }
           }
            s2=s2+s1.charAt(i);
              System.out.print(s1.charAt(i)+" "+c+" ");
             }
       }
    }
}


Occurence:

import java.util.*;
public class Occurence {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int[] a=new int[sc.nextInt()];
        for(int i=0;i<a.length;i++){
            a[i]=sc.nextInt();
        }
        int[] fr=new int[a.length];
        for(int i=0;i<a.length;i++){
            int count=1;
            for(int j=i+1;j<a.length;j++){
                
                if(a[i]==a[j]) {
                    count++;
                    fr[j]=-1;
                }
            }
            if(fr[i]!=-1){
                fr[i]=count;
            }
        }
        HashMap <Integer,Integer> hm=new HashMap<Integer,Integer>();
        for(int i=0;i<fr.length;i++){
            if(fr[i]!=-1){
               hm.put(a[i],fr[i]);
            }
        }
        System.out.println(hm);
    }
}

Upper to Lowercase and Lower to uppercase:

import java.util.*;
public class casechange {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        String s1="";
        for(int i=0;i<s.length();i++)
        {
            char temp=s.charAt(i);
            if(Character.isLowerCase(temp))
            {
              temp=Character.toUpperCase(temp);
              String t=Character.toString(temp);
              s1=s1+t;
            }
            else if(Character.isUpperCase(temp))
            {
                temp=Character.toLowerCase(temp);
                String t=Character.toString(temp);
                s1=s1+t;

            }
        }
        System.out.print(s1);
    }
}


import java.util.*;
public class countvalues {
    public static void main(String args[]){
    Scanner sc=new Scanner(System.in);
    String s=sc.nextLine().toLowerCase();
    int d=0,v=0,c=0,sp=0;
    for(int i=0;i<s.length();i++)
    {
        char ch=s.charAt(i);
        if(Character.isDigit(ch))
        {
              d++;
        }
        else if(ch>='a' && ch<='z')
        {
            if(ch=='a' || ch=='e'|| ch=='u'|| ch=='i' || ch=='o')
            {
                  v++;
            }
            else{
                c++;
            }
        }
        else{
            sp++;
        }
    }
    System.out.print("Digits:"+ d+ "\nVowels:" + v +"\nConsonents:" + c + "\nspecial character:" + s);
}
}



Even ascii:

import java.util.*;
public class Evenascii {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s=sc.nextLine();
        int n=s.length();
        String str="";
        for(int i=0;i<n;i++)
        {
            char ch=s.charAt(i);
            int num=(int)ch;
            if(num%2==0)
            {
                str+=Character.toString(ch);
            }
            
        }
        System.out.print(str);
}
}

Firstindex:

import java.util.*;
public class Firstindex {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        String ep="";
        for(int i=0;i<s.length();i++)
        {
            if(!ep.contains(String.valueOf(s.charAt(i))))
            {
                System.out.println(s.charAt(i)+" "+i);
                ep+=s.charAt(i);
            }
        }
    }
}


print character based on integer value
ip:2a3b1c
op:aabbbc

import java.util.*;
public class Charprint {
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        String s=sc.nextLine();
        char ch[]=s.toCharArray();
        String s1="";
        for(int i=0;i<ch.length;i++)
        {
            char c=ch[i];
            if(Character.isDigit(c))
            {
                int n=Integer.parseInt(String.valueOf(c));
                for(int j=n;j>=1;j--)
                {
                    //System.out.print(ch[i+1]);
                    s1=s1+((String.valueOf(ch[i+1])));
                }
            }
        }
        System.out.print(s1);
    }
}


Noduplicate:
import java.util.*;
public class Main
{
	public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    String s=sc.nextLine();
	    Noduplicate(s);
	    //String news="";
	    
	}
	static String news="";
	static int c=0;
	   public static void Noduplicate(String s){
	       StringBuffer sb=new StringBuffer(s);
	    for(int i=0;i<sb.length()-1;i++)
	    {
	          c=0;
	        if(sb.charAt(i)==sb.charAt(i+1))
	        {
	            c++;
	            news+=sb.delete(i,i+2);
	        }
	    }
	    if(c==0){
	    System.out.print(news);
	    }
	    else{
	        Noduplicate(news);
	    }
}
}



import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        String input1 = "RGBBGBGR";
        String output1 = removeAdjacentPairs(input1);
        System.out.println("Output: " + (output1.isEmpty() ? "NULL" : output1));
    }
    public static String removeAdjacentPairs(String s) {
        Stack<Character> stack = new Stack<>();
        for (char c : s.toCharArray()) {
            if (!stack.isEmpty() && stack.peek() == c) {
                stack.pop(); 
            } else {
                stack.push(c); 
            }
        }
        StringBuilder result = new StringBuilder();
        for (char c : stack) {
            result.append(c);
        }
        
        return result.toString();
    }
}

Collection:
ArrayList

import java.util.*;
class Main{
        public static void main(String[] args)
    {

                // implemented by the ArrayList class
        List<Integer> l1 = new ArrayList<Integer>();

        

        l1.add(0, 1);
        l1.add(1, 2);

        // Print the elements inside the object
        System.out.println(l1);                                                                                                     

        List<Integer> l2 = new ArrayList<Integer>();

        l2.add(1);
        l2.add(2);
        l2.add(3);

       l1.addAll(1, l2);

        System.out.println(l1);

        l1.remove(1);

        System.out.println(l1);

          System.out.println(l1.get(3));

        l1.set(0, 5);
        System.out.println(l1);
    }
}

LinkedList:Insertatbeginning

import java.util.*;
class LinkedList
{
   // Node head;
    class Node{
        int data;
        Node next;
        Node(int val){
            data=val;
            next=null;
        }
    }
    Node head;
    LinkedList(){
        head=null;
    }
    public void inserAtbeginning(int val)
    {
        Node newNode=new Node(val);
        if(head==null)
        {
            head=newNode;
        }
        else{
            newNode.next=head;
            head=newNode;
        }
    }
public void inserAtpos(int pos,int val)
    {
        Node newNode=new Node(val);
        Node temp=head;
        for(int i=1;i<pos;i++)
        {
            temp=temp.next;
        }
        newNode.next=temp.next;
        temp.next=newNode;
    }
    
    public void display()
    {
        Node temp=head;
        while(temp!=null)
        {
            System.out.print(temp.data+" ");
            temp=temp.next;
        }
    }
}
public class Main
{
	public static void main(String[] args) {
	    LinkedList list=new LinkedList();
	    list.inserAtbeginning(2);
	    list.inserAtbeginning(3);
	    list.inserAtbeginning(26);
	    list.display();
	}
}


Input : 

4

Output :

1

3 2

6 5 4

10 9 8 7
import java.util.*;
public class Pattern
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int a[]=new int[n];
        int k=0,l=0;
        for(int i=1;i<=n;i++)
        {
            l=k+i;
            k=l;
            for(int j=1;j<=i;j++)
            {
                System.out.print(l+" ");
                l--;
            }
            System.out.println();
        }
    }
}


Input :
11
1 2 5 6 8 9 9 3 4 2 2

Output : 2
Reason: The number with the highest value in the array is 9. It occurs 2 times in the array.

import java.util.*;
public class Maximum
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int a[]=new int[n];
        for(int i=0;i<n;i++)
        {
            a[i]=s.nextInt();
        }
        int max=a[0];
        for(int i=0;i<n;i++)
        {
            //int c=0;
           for(int j=0;j<n;j++)
           {
               if(max<a[j])
               {
                   max=a[j];
               }
           }
        }
        int c=0;
        for(int i=0;i<n;i++)
        {
            if(max==a[i])
            {
                c++;
            }
        }
        System.out.print(c);
        
    }
}


Input : hello world
Output : hzllz wzrld

import java.util.*;
public class Main
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String str=s.nextLine();
        for(int i=0;i<str.length();i++)
        {
             if(str.charAt(i)=='a'||str.charAt(i)=='e'||str.charAt(i)=='i'||str.charAt(i)=='o'||str.charAt(i)=='u')
             {
                str=str.replace(str.charAt(i),'z');
             }
            
        }
        System.out.print(str);
    }
}


Input : malayalam
Output:
m – 2
a – 4
l – 2
y – 1

import java.util.*;
public class occ
{
    public static void main(String arg[])
    {
        Scanner s=new Scanner(System.in);
        String s3="";
        String s1=s.nextLine();
        int c=0;
        for(int i=0;i<s1.length();i++)
        {
            c=0;
            for(int j=0;j<s1.length();j++)
            {
                if(s1.charAt(i)==s1.charAt(j))
                {
                    c++;
                }
            }
            char a=s1.charAt(i);
            if(s3.contains(String.valueOf(a)))
            {
                continue;
            }
            else
            {
                s3+=a;
                System.out.println(a+"-"+c);
            }
        }
    }
}


Input :
435
Output :
3
Explanation : 

4+3+5=12

1+2=3 ans.
import java.util.*;
public class dig
{
    public static void main(String arg[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int sum=digit(n);
        while(true)
        {
            if(sum>9)
            {
               sum=digit(sum); 
            }
            else
            {
                break;
            }
        }
        System.out.print(sum);
        
    }
    public static int digit(int n)
    {
        int s=0;
        while(n>0)
        {
            int r=n%10;
            s+=r;
            n=n/10;
        }
        return s;
    }
}

Input : 
5
Output :

1

11

121

1221

12221

import java.util.*;
public class Pattern
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=i;j++)
            {
                if(j==1 || j==i)
                {
                    System.out.print('1');
                }
                else
                {
                    System.out.print('2');
                }
            }
            System.out.println();
        }
    }
}

Input :
listen

Output :
silent

import java.util.*;
public class Anagram
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String str1=s.nextLine();
        String str2=s.nextLine();
        char a[]=str1.toCharArray();
        char b[]=str2.toCharArray();
        int c=0;
        if(a.length==b.length)
        {
            for(int i=0;i<a.length;i++)
            {
                for(int j=0;j<b.length;j++)
                {
                    if(a[i]==b[j])
                    {
                        c++;
                    }
                }
            }
            if(c==a.length)
            {
                System.out.print("Anagram");
            }
        }
    }
}



ip:aabcccccaaa
op:a2b1c5a3

import java.util.*;
public class Count
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String str=s.nextLine();
        int n=str.length();
        for(int i=0;i<n-1;i++)
        {
            int c=1;
           while(i<n-1 && str.charAt(i)==str.charAt(i+1))
           {
               c++;
               i++;
           }
           System.out.print(str.charAt(i));
           System.out.print(c);
        }
    }
}


Longest common prefix:

import java.util.*;
public class prefix
{
    public static void main(String arg[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        s.nextLine();
        String a[]=new String[n];
        for(int i=0;i<n;i++)
        {
            a[i]=s.next();
        }
        Arrays.sort(a);
        String s1=a[0];
        String s2=a[a.length-1];
        int idx=0;
        while(idx<s1.length() && idx<s2.length())
        {
            if(s1.charAt(idx)==s2.charAt(idx))
            {
                idx++;
            }
            else
            {
                break;
            }
        }
        System.out.print(s1.substring(0,idx));
    }
}



ip:waterbottle
op:erbottlewat

import java.util.*;
public class rotation
{
    public static void main(String arg[])
    {
        Scanner s=new Scanner(System.in);
        String s1=s.nextLine();
        String s2=s.nextLine();
        int i=0;
        char c='/';
        boolean z=false;
        char a[]=s2.toCharArray();
        //char b[]=s1.toCharArray();
        if(s1.length()!=s2.length())
        {
            System.out.print("false");
        }
        else
        {
            while(i<s1.length())
            {
                c=a[a.length-1];
                for(int j=s1.length()-1;j>0;j--)
                {
                    a[j]=a[j-1];
                }
                a[0]=c;
                String s5=String.valueOf(a);
                if(s5.equals(s1))
                {
                    z=true;
                    System.out.print("true");
                    break;
                }
                else
                {
                    i++;
                }
            }
            if(!z)
            {
                System.out.print("false");
            }
        }
    }
}


Input :
4
Output:
A
AB
ABA
ABAB

import java.util.*;
public class Pattern
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=i;j++)
            {
                if(j%2==1)
                {
                    System.out.print("A");
                }
                else{
                    System.out.print("B");
                }
            }
            System.out.println();
        }
    }
}



Input: abcabcbb
Output: 3
Explaination:
  The longest substring without repeating letters for “abcabcbb” is “abc”, which the length is 3.

import java.util.*;
public class LongSubstring
{
    public static void main(String arg[])
    {
        Scanner s=new Scanner(System.in);
        String s1=s.nextLine();
        int len=0;
        int i=0,j=0;
        HashSet<Character> hs=new HashSet<>();
        while(i<s1.length() && j<s1.length())
        {
            if(!hs.contains(s1.charAt(j)))
            {
                hs.add(s1.charAt(j));
                j++;
                len=Math.max(len,j-i);
            }
            else
            {
                hs.remove(s1.charAt(i));
                i++;
            }
        }
        System.out.print(len);
    }
}


INPUT 1:
3
OUTPUT 1:
1
23
456

import java.util.*;
public class Pattern
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        int n=s.nextInt();
        int c=1;
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=i;j++)
            {
                System.out.print(c);
                c++;
            }
            
            System.out.println();
        }
    }
}


INPUT1: Java
OUTPUT1: aavJ

import java.util.*;
public class Exchange
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String str=s.nextLine();
        int n=str.length();
        String s1="";
        s1=s1+str.charAt(n-1);
        //char ch1=str.charAt(n-1);
        //s1=s1+ch.tostring();
        for(int i=1;i<n-1;i++)
        {
            s1=s1+str.charAt(i);
        }
        s1=s1+str.charAt(0);
        
        System.out.print(s1);
    }
}


Runtime Input :
priya
Output :
NO


import java.util.*;
public class Duplicate
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String str1=s.nextLine();
        String str=str1.toLowerCase();
        int n=str.length();
        int c=0;
        for(int i=0;i<n;i++)
        {
             c=0;
            for(int j=i+1;j<n;j++)
            {
                if(str.charAt(i)==str.charAt(j))
                {
                    c++;
                }
            }
            if(c>=1)
            {
                System.out.print("YES");
                break;
            }
        }
        if(c==0)
        {
            System.out.print("No");
        }
    }
}


Runtime Input :
Wipro Technologies Bangalore
Output :
TECHNOLOGIES

import java.util.*;
public class Upper
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String s1=s.nextLine();
        String a[]=s1.split(" ");
        int n=a.length;
        if(n>1)
        {
            for(int i=0;i<n;i++)
            {
                if(i==1)
                {
                    System.out.print(a[i].toUpperCase());
                    break;
                }
            }
        }
        else
        {
            System.out.print("LESS");
        }
    }
}



Input
4
ghij defg jkl abcd

Output
1

import java.util.*;
public class Alphabet
{
    public static void main(String args[])
    {
        Scanner s=new Scanner(System.in);
        String s1=s.nextLine().toLowerCase();
        String a[]=s1.split(" ");
        int n=a.length;
        int c=0;
        for(int i=0;i<n;i++)
        {
            String s2=a[i];
             int n1=s2.length();
            if(s2.charAt(i)==s2.charAt(n1-1))
            {
                c++;
            }
        }
        if(c==n)
        {
            System.out.print("1");
        }
        else
        {
            System.out.print("-1");
        }
        
        
    }
}

